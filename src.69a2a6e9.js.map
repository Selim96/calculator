{"version":3,"sources":["data.js","index.js"],"names":["provaiders","name","icon","color","values","minPrice","maxPrice","Infinity","storage","transfer","freeStorage","freeTransfer","hdd","ssd","multi","single","refs","storageInput","document","querySelector","transferInput","handlInputStorage","handlInputTransfer","provaidersNames","provaidersSchedule","TABLET_WIDTH","storageValue","transferValue","switcher","minValues","renderSignatures","renderColumns","changeColor","window","addEventListener","addListenerOnSignature","onresize","e","allInputs","querySelectorAll","markup","map","index","result","columnSize","switcherType","find","item","id","type","push","getItemSize","getColumnSize","toFixed","join","innerHTML","namesMarkup","Object","keys","pic","innerWidth","length","changeStorageValue","currentValue","currentTarget","value","changeTransferValue","handlChangeStorage","handlChangeTransfer","handlChangeSwitcher","forEach","toString","style","backgroundColor","Number","dataset","Math","min"],"mappings":"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","file":"src.69a2a6e9.js","sourceRoot":"..\\src","sourcesContent":["export const provaiders = [\r\n    {\r\n        name: \"backblaze\",\r\n        icon: null,\r\n        color: \"rgba(243, 53, 53, 0.527)\",\r\n        values: {\r\n            minPrice: 7,\r\n            maxPrice: +Infinity,\r\n            storage: 0.005,\r\n            transfer: 0.01,\r\n            freeStorage: 0,\r\n            freeTransfer: 0\r\n        }\r\n    },\r\n    {\r\n        name: \"bunny\",\r\n        icon: null,\r\n        color: \"rgba(248, 146, 50, 0.527)\",\r\n        values: {\r\n            minPrice: 0,\r\n            maxPrice: 10,\r\n            storage: {\r\n                hdd: 0.01,\r\n                ssd: 0.02\r\n            },\r\n            transfer: 0.01,\r\n            freeStorage: 0,\r\n            freeTransfer: 0\r\n        }\r\n    },\r\n    {\r\n        name: \"scaleway\",\r\n        icon: null,\r\n        color: \"rgba(248, 55, 206, 0.527)\",\r\n        values: {\r\n            minPrice: 0,\r\n            maxPrice: +Infinity,\r\n            storage: {\r\n                multi: 0.06,\r\n                single: 0.03\r\n            },\r\n            transfer: 0.02,\r\n            freeStorage: 75,\r\n            freeTransfer: 75\r\n        }\r\n    },\r\n    {\r\n        name: \"vultr\",\r\n        icon: null,\r\n        color: \"rgba(55, 155, 248, 0.527)\",\r\n        values: {\r\n            minPrice: 5,\r\n            maxPrice: +Infinity,\r\n            storage: 0.01,\r\n            transfer: 0.01,\r\n            freeStorage: 0,\r\n            freeTransfer: 0\r\n        }\r\n    }\r\n];","import { provaiders } from './data.js';\r\nimport './sass/main.scss';\r\nimport pic from '../public/icon.webp'\r\n\r\nconst refs = {\r\n    storageInput: document.querySelector('#storage'),\r\n    transferInput: document.querySelector('#transfer'),\r\n    handlInputStorage: document.querySelector('#inputStorage'),\r\n    handlInputTransfer: document.querySelector('#inputTransfer'),\r\n    provaidersNames: document.querySelector('.provaiders_names'),\r\n    provaidersSchedule: document.querySelector('.schedule'),\r\n};\r\n\r\nconst TABLET_WIDTH = 860;\r\n// const MOBILE_WIDTH = 480;\r\n\r\nlet storageValue = 1;\r\nlet transferValue = 1;\r\nlet switcher = [];\r\nlet minValues = [];\r\n\r\nrenderSignatures();\r\nrenderColumns();\r\nchangeColor();\r\n\r\nwindow.addEventListener(\"resize\", addListenerOnSignature);\r\nwindow.onresize = renderColumns;\r\n// window.onresize = changeColor ;\r\nwindow.addEventListener(\"resize\", (e) => changeColor());\r\n\r\n\r\nconst allInputs = document.querySelectorAll(\".inputBtn\");\r\n\r\nallInputs.forEach((item) => { item.addEventListener(\"change\", handlChangeSwitcher) });\r\n\r\nrefs.storageInput.addEventListener(\"input\", changeStorageValue);\r\n\r\nrefs.transferInput.addEventListener(\"input\", changeTransferValue);\r\n\r\nrefs.handlInputStorage.addEventListener(\"input\", handlChangeStorage);\r\n\r\nrefs.handlInputTransfer.addEventListener(\"input\", handlChangeTransfer);\r\n\r\n\r\nfunction renderColumns() {\r\n    const markup = provaiders.map(({ values, color }, index) => {\r\n        const { minPrice, maxPrice, storage, transfer, freeStorage, freeTransfer } = values;\r\n\r\n        let result = 0;\r\n\r\n        if (storageValue <= 1000 && transferValue <= 1000) {\r\n            \r\n        }\r\n        if ((typeof storage) !== \"object\") {\r\n            const columnSize = (storageValue > freeStorage ? (storageValue - freeStorage) : 0) * storage + (transferValue > freeTransfer ? (transferValue - freeTransfer) : 0) * transfer;\r\n\r\n            result = columnSize < maxPrice ? (columnSize < minPrice ? minPrice : columnSize) : maxPrice;\r\n        } else {\r\n            const switcherType = switcher.find(item => item?.id === index).type;\r\n            const columnSize = (storageValue > freeStorage ? (storageValue - freeStorage) : 0) * storage[switcherType] + (transferValue > freeTransfer ? (transferValue - freeTransfer) : 0) * transfer;\r\n            \r\n            result = columnSize < maxPrice ? (columnSize < minPrice ? minPrice : columnSize) : maxPrice;\r\n        }\r\n        minValues.push(result);\r\n        \r\n        return `<div class=\"schedule_item\" style=${getItemSize()}>\r\n                    <div class=\"column\" style=${getColumnSize(result)} data-result=${result} data-color=\"${color}\"></div>\r\n                    <span class=\"value\" >$${result.toFixed(2)}</span>\r\n                </div>`\r\n    }).join(\"\");\r\n\r\n    refs.provaidersSchedule.innerHTML = markup;\r\n}\r\n\r\nfunction renderSignatures() {\r\n    const namesMarkup = provaiders.map(({ name, values, icon }, index) => {\r\n        const { storage } = values;\r\n        \r\n        if ((typeof storage) === \"object\") {\r\n            switcher.push({ id: index, type: Object.keys(storage)[0] })\r\n            return `<div class=\"signature\" style=${getItemSize()}>\r\n                <img src=\"${icon ? icon : pic}\" alt=\"provaider icon\" width=\"30\" height=\"30\" class=\"signature_icon\"/>\r\n                <div>\r\n                    <p class=\"signature_name\">${name}</p>\r\n                    <div class=\"name_switcher\">\r\n                        <label class=\"\">\r\n                            ${Object.keys(storage)[0]} <input type=\"radio\" id=\"${index}\" name=\"storageType${index}\" value=${Object.keys(storage)[0]}  ${switcher.find(item=>item.id === index).type === Object.keys(storage)[0] && \"checked\"} class=\"inputBtn\"/>\r\n                        </label>\r\n                        <label class=\"\">\r\n                            ${Object.keys(storage)[1]} <input type=\"radio\" id=\"${index}\" name=\"storageType${index}\" value=${Object.keys(storage)[1]} ${switcher.find(item=>item.id === index).type === Object.keys(storage)[1] && \"checked\"} class=\"inputBtn\"/>\r\n                        </label> \r\n                    </div>\r\n                </div>\r\n            </div>`\r\n        }\r\n        return `<div class=\"signature\" style=${getItemSize()}>\r\n            <img src=\"${icon ? icon : pic}\" alt=\"provaider icon\" width=30 height=30 class=\"signature_icon\"/>\r\n            <p class=\"signature_name\">${name}</p>\r\n        </div>`\r\n    }).join(\"\");\r\n    refs.provaidersNames.innerHTML = namesMarkup;\r\n};\r\n\r\nfunction getColumnSize(result) {\r\n    return window.innerWidth >= TABLET_WIDTH ? `\"width: ${(result * 5)}px; height: 75%;\"` : `\"width: 75%; height: ${(result * 5)}px;\"`\r\n};\r\n\r\nfunction getItemSize() {\r\n    return window.innerWidth < TABLET_WIDTH ? `\"width: calc((100% - 15px)/${provaiders.length}); height: 100%\"` : `\"width: 100%; height: calc((100% - 15px)/${provaiders.length});\"`\r\n};\r\n\r\nfunction changeStorageValue(e) {\r\n    const currentValue = e.currentTarget.value;\r\n    refs.handlInputStorage.value = currentValue;\r\n    storageValue = currentValue;\r\n    renderColumns();\r\n    changeColor();\r\n};\r\n\r\nfunction changeTransferValue(e) {\r\n    const currentValue = e.currentTarget.value;\r\n    refs.handlInputTransfer.value = currentValue;\r\n    transferValue = currentValue;\r\n    renderColumns();\r\n    changeColor();\r\n};\r\n\r\nfunction handlChangeStorage(e) {\r\n    const currentValue = e.currentTarget.value;\r\n    refs.storageInput.value = currentValue;\r\n    refs.handlInputStorage.value = currentValue;\r\n    storageValue = currentValue <= 1000 ? currentValue : 1000;\r\n    renderColumns();\r\n    changeColor()\r\n};\r\n\r\nfunction handlChangeTransfer(e) {\r\n    const currentValue = e.currentTarget.value;\r\n    refs.transferInput.value = currentValue;\r\n    refs.handlInputTransfer.value = currentValue;\r\n    transferValue = currentValue <= 1000 ? currentValue : 1000;;\r\n    renderColumns();\r\n    changeColor()\r\n};\r\n\r\nfunction handlChangeSwitcher(e) {\r\n    switcher.forEach(item => {\r\n        if (item.id.toString() === e.currentTarget.id) {\r\n            item.type = e.currentTarget.value;\r\n        }\r\n    });\r\n    renderColumns();\r\n    changeColor();\r\n};\r\n\r\nfunction changeColor() {\r\n    const allColumns = document.querySelectorAll(\".column\");\r\n    allColumns.forEach(item => {\r\n        item.style.backgroundColor = Number(item.dataset.result) === Math.min(...minValues) ? item.dataset.color : \"rgba(109, 108, 108, 0.39)\";\r\n    });\r\n    minValues = [];\r\n};\r\n\r\nfunction addListenerOnSignature(e) {\r\n    renderSignatures();\r\n    const allInputs = document.querySelectorAll(\".inputBtn\");\r\n    allInputs.forEach((item) => { item.addEventListener(\"change\", handlChangeSwitcher) });\r\n};"]}